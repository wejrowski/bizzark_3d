package com.bizzark{	import flash.display.Stage;	import flash.display.Sprite;	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import fl.transitions.easing.*;	import fl.transitions.*;	import flash.display.LineScaleMode;    import flash.display.CapsStyle;    import flash.display.JointStyle;		// We import the FIVe3D classes needed.	import five3D.display.DynamicText3D;	import five3D.display.Scene3D;	import five3D.display.Shape3D;	import five3D.display.Sprite3D;	import five3D.typography.FuturaCondensedBold;	import five3D.utils.Drawing;		public class Bizzark3d extends Sprite {		private var scene:Scene3D = new Scene3D();				private var sign:Sprite3D = new Sprite3D();//child of scene				private var world:DynamicText3D = new DynamicText3D(FuturaCondensedBold);// 1st child of sign		private var rect1:Sprite3D = new Sprite3D(); // 2nd child of sign		var Tz:Tween;		var Tx:Tween;		var Ty:Tween;			var Try:Tween;		var Trx:Tween;		var Ta:Tween;		var TWz:Tween;				public function Pause(p:Boolean){			if(p){				trace("Pause!");				this.removeEventListener(Event.ENTER_FRAME, starEnterFrameHandler);					Try.removeEventListener(TweenEvent.MOTION_FINISH, starthandle);				Try.removeEventListener(TweenEvent.MOTION_FINISH, startZ);					TWz.removeEventListener(TweenEvent.MOTION_FINISH, wz1);				TWz.removeEventListener(TweenEvent.MOTION_FINISH, wz2);								Tx.removeEventListener(TweenEvent.MOTION_FINISH, startMovement1);				Tz.removeEventListener(TweenEvent.MOTION_FINISH, startMovement1);				Tz.removeEventListener(TweenEvent.MOTION_FINISH, startMovement2);								Tz.stop();				Tx.stop();				TWz.stop();				Try.stop();			}else{				this.addEventListener(Event.ENTER_FRAME, starEnterFrameHandler);				wz1("sdf");				startMovement1("sdf");			}		}		function Bizzark3d() {			addEventListener(Event.ADDED_TO_STAGE, initStage);		}//end Bizzark3D		function initStage(e){			// We create a new Scene3D named "scene", center it and add it to the display list.			stage.addEventListener(Event.RESIZE, resizeEvent);			scene.x = 0;			scene.y = 0;			addChild(scene);			scene.addChild(sign);									// We create a new DynamicText3D named "world", modify its properties, place it and add it to the "sign" display list.			world.size = 100;			world.color = 0xF9B30F;			world.text = "BIZZARK";			world.x = -this.width/2-300;			world.y = -this.height/2-50;			//world.z=200;			sign.addChild(world);			sign.addChild(rect1);			TWz = new Tween(world, "z", Regular.easeInOut, 200, 200, 0, false);			Try = new Tween(sign, "rotationY", Regular.easeInOut, sign.rotationY, sign.rotationY, 0, false);			Trx = new Tween(sign, "rotationX", Regular.easeInOut, sign.rotationX, sign.rotationX, 0, false);			center();			this.alpha=0;		}			function resizeEvent(e){				center();			}			function center(){				this.x = (stage.stageWidth/2)-100/2;				this.y = (stage.stageHeight/2)-63/2;			}						public function startMovement(){				Ta = new Tween(this, "alpha", Regular.easeInOut, 0, 1, 11, false);				Tz = new Tween(sign, "z", Regular.easeInOut, 1000, 0, 20, false);				var thex = ((stage.stageWidth/2)-this.width/2);				Tx= new Tween(sign, "x", Strong.easeInOut, stage.stageWidth, 50, 20, false);				Try= new Tween(sign, "rotationY", Elastic.easeInOut, 180, 0, 45, false);				Tx.addEventListener(TweenEvent.MOTION_FINISH, startMovement1);				Try.addEventListener(TweenEvent.MOTION_FINISH, starthandle);				Try.addEventListener(TweenEvent.MOTION_FINISH, startZ);			}									var wZTime:int = Math.random()*60+60;			var wZZ:int = Math.random()*400-200;			public function startZ(e){				Try.removeEventListener(TweenEvent.MOTION_FINISH, startZ);				TWz.continueTo(wZZ, wZTime);				TWz.addEventListener(TweenEvent.MOTION_FINISH, wz1);			}						public function wz1(e){				wZTime = Math.random()*60+60;				wZZ = Math.random()*400-200;				TWz.continueTo(wZZ, wZTime);				trace("z:"+wZZ);				TWz.removeEventListener(TweenEvent.MOTION_FINISH, wz1);				TWz.addEventListener(TweenEvent.MOTION_FINISH, wz2);			}						public function wz2(e){				wZTime = Math.random()*60+60;				wZZ = Math.random()*400-200;				TWz.continueTo(wZZ, wZTime);				trace("z:"+wZZ);				TWz.removeEventListener(TweenEvent.MOTION_FINISH, wz2);				TWz.addEventListener(TweenEvent.MOTION_FINISH, wz1);			}						public function starthandle(e){				Try = new Tween(sign, "rotationY", Regular.easeInOut, sign.rotationY, sign.rotationY, 0, false);				Trx = new Tween(sign, "rotationX", Regular.easeInOut, sign.rotationX, sign.rotationX, 0, false);				Try.removeEventListener(TweenEvent.MOTION_FINISH, starthandle);				this.addEventListener(Event.ENTER_FRAME, starEnterFrameHandler);			}							public function startMovement1(e){				var zto=Math.random()*700;				var tto=Math.random()*300+100;				Tz.continueTo(zto, tto);				Tz.removeEventListener(TweenEvent.MOTION_FINISH, startMovement1);				Tz.addEventListener(TweenEvent.MOTION_FINISH, startMovement2);				//Try.continueTo(180, 20);			}			function startMovement2(e){				var zto=Math.random()*-700;				var tto=Math.random()*300+100;				Tz.continueTo(zto, tto);				Tz.removeEventListener(TweenEvent.MOTION_FINISH, startMovement2);				Tz.addEventListener(TweenEvent.MOTION_FINISH, startMovement1);				//Try.continueTo(180, 20);			}								var MX=mouseX;		var MY=mouseY;		var mouseFrame:uint=0;		var MOUSEFRAMEMAX:uint = 100;		var randomFrameX:uint=0;		var randomFrameMaxX:uint = 0;		var randomFrameY:uint=0;		var randomFrameMaxY:uint = 0;		var moving:Boolean = false;		var newRotationX:int;		var newRotationY:int;		var ydeg:int; 		var xdeg:int;				public function starEnterFrameHandler(event:Event):void {			if(mouseFrame==0){				MX=MovieClip(root).mouseX;				MY=MovieClip(root).mouseY;			}						mouseFrame++;			if(MovieClip(root).mouseX!=MX || MovieClip(root).mouseY!=MY){ //if mouse is moving				moving=true;			}						if(mouseFrame==MOUSEFRAMEMAX){				if(MovieClip(root).mouseX==MX && MovieClip(root).mouseY==MY){ //if mouse hasn't move.. 					moving=false;				}				mouseFrame=0;			}			//if(moving){ // follow mouse pattern			var norandom:int=1; // remove for mouse			if(norandom==2){	//remove for mouse				if(mouseX<stage.stageWidth){ // if mouseX is within stage, let it be that, otherwise don't let it flip out.					if(mouseX>0)						newRotationY=MovieClip(root).mouseX; //NORMAL					else						newRotationY = 0;				}else{					newRotationY=stage.stageHeight;				}									if(mouseY<stage.stageHeight){					if(mouseY>0)						newRotationX=MovieClip(root).mouseY; // NORMAL					else						newRotationX = 0;								}else{					newRotationX = stage.stageHeight;				}				Try = new Tween(sign, "rotationY", Regular.easeInOut, sign.rotationY, ydeg, 20, false);				Trx = new Tween(sign, "rotationX", Regular.easeInOut, sign.rotationX, xdeg, 20, false);						}else{ //go random!				if(randomFrameY == 0)					randomFrameMaxY = Math.random()*90+30;				if(randomFrameX == 0)					randomFrameMaxX = Math.random()*90+30;				randomFrameX++;				randomFrameY++;												if(randomFrameY == randomFrameMaxY){					newRotationY = Math.random()*360-180;					//Try = new Tween(sign, "rotationY", Regular.easeInOut, sign.rotationY, newRotationY, randomFrameMaxY, false);					Try.continueTo(newRotationY, randomFrameMaxY);					randomFrameY = 0;				}									if(randomFrameX == randomFrameMaxX){					newRotationX = Math.random()*360-180;										//Trx = new Tween(sign, "rotationX", Regular.easeInOut, sign.rotationX, newRotationX, randomFrameMaxX, false);					Trx.continueTo(newRotationX, randomFrameMaxX);					randomFrameX = 0;				}			}//end go random!									ydeg = ((newRotationY-(stage.stageWidth/2))/(stage.stageWidth/2))*60; 			xdeg = -((newRotationX-(stage.stageHeight/2))/(stage.stageHeight/2))*60; // NORMAL;			//trace(MovieClip(root).mouseX+", "+(stage.stageWidth/2));			//Try.continueTo(ydeg, 20);			//Trx.continueTo(xdeg, 20);			//event.target.rotationX = xdeg;			//event.target.rotationY = ydeg;		}	}}